@use "sass:math";

@import url(https://fonts.googleapis.com/css?family=Open+Sans:regular,600,700&display=swap); 
@import url(https://fonts.googleapis.com/css?family=Manrope:regular,700&display=swap);

$fontfamily:'Open Sans';

//===========================================================================================================================
//Percent
@function percent($px, $from) {
	$result: math.div($px, $from) * 100%;
	@return $result;
}
//REM
@function rem($px) {
	$result: math.div($px, 16) + rem;
	@return $result;
}
//EM
@function em($px, $current: 16) {
	$result: math.div($px, $current) + em;
	@return $result;
}
//adaptive value
@mixin adaptiveValue($property, $startSize, $minSize, $widthFrom: $containerWidth, $widthTo: $minWidth, $keepSize: 0) {
	@if ($widthFrom == $containerWidth and $maxWidthContainer == 0) {
		$widthFrom: $maxWidth;
	}
	@if ($minSize <= 0) {
		$minSize: 0.0001;
	}
	@if ($startSize <= 0) {
		$startSize: 0.0001;
	}

	// Брейк-поинты в EM
	$widthFromMedia: em($widthFrom);
	$widthToMedia: em($widthTo);

	// Формула плавающего значения
	// Источник: https://css-tricks.com/linearly-scale-font-size-with-css-clamp-based-on-the-viewport/
	$slope: math.div(($startSize - $minSize), ($widthFrom - $widthTo));
	$yIntersection: -$widthTo * $slope + $minSize;
	$flyValue: #{rem($yIntersection)}" + " #{$slope * 100}vw;

	// Получение значения свойства
	$propertyValue: #{"clamp(" rem($minSize) "," $flyValue "," rem($startSize) ")"};
	// Если отрицательные значения
	@if ($minSize > $startSize) {
		$propertyValue: #{"clamp(" rem($startSize) "," $flyValue "," rem($minSize) ")"};
	}

	@if $widthFrom == $containerWidth or $widthFrom == $maxWidth or $keepSize == 1 or $keepSize == 2 {
		@media (min-width: $widthFromMedia) {
			#{$property}: rem($startSize);
		}
	}
	@media (min-width: $widthToMedia) and (max-width: $widthFromMedia) {
		#{$property}: $propertyValue;
	}
	@if $widthTo == $minWidth or $keepSize == 1 or $keepSize == 3 {
		@media (max-width: $widthToMedia) {
			#{$property}: rem($minSize);
		}
	}
}

//===========================================================================================================================
$minWidth: 320;
// Ширина полотна (макета)
$maxWidth: 1400;
// Ширина ограничивающего контейнера (0 = нет ограничения)
$maxWidthContainer: 1201;

$containerPadding: 30;

// Ширина страбатывания первого брейкпоинта
$containerWidth: $containerPadding + $maxWidthContainer;

// break-points
$pc: em($containerWidth); // ПК, ноутбуки, некоторые планшеты в горизонтальном положении
$tablet: em(991.98); // Планшеты, некоторые телефоны в горизонтальном положении
$mobile: em(767.98); // Телефоны L
$mobileSmall: em(479.98); // Телефоны S
//</variables>

//===========================================================================================================

//<responsive grid>===========================================================================================================


//<null>===========================================================================================================
* {
	padding: 0px;
	margin: 0px;
	border: 0px;

}
*,
*:before,
*:after {
	-moz-box-sizing: border-box;
	-webkit-box-sizing: border-box;
	box-sizing: border-box;
}
:focus,
:active {
	outline: none;
}
a:focus,
a:active {
	outline: none;
}
aside,
nav,
footer,
header,
section {
	display: block;
}
html,
body {
	height: 100%;
	min-width: $minWidth;
}
body {
	line-height: 1;
	font-family: $fontfamily;
	-ms-text-size-adjust: 100%;
	-moz-text-size-adjust: 100%;
	-webkit-text-size-adjust: 100%;
}
input,
button,
textarea {
	font-family: $fontfamily;
}
input::-ms-clear {
	display: none;
}
button {
	cursor: pointer;
	color: inherit;
	font-size: inherit;
	background-color: inherit;
	transition: all 0.3s ease;
}
button::-moz-focus-inner {
	padding: 0;
	border: 0;
}
a {
	color: inherit;
	transition: 0.4s ease-in;
}
a,
a:visited {
	text-decoration: none;
}
a:hover {
	text-decoration: none;
}
ul li {
	list-style: none;
}
img {
	vertical-align: top;
}
h1,
h2,
h3,
h4,
h5,
h6 {
	font-weight: inherit;
	font-size: inherit;
}

//==================
.btn {
	max-width: 180px;
	font-size: 20px;
	padding: 10px 15px;
	border: 2px solid black;
	position: relative;
	overflow: hidden;
	&:hover{
		color: white;
		&:before{
			top: 0;
		}
	}
	&:before{
		transition: all 0.3s ease;
		content: '';
		top: -100%;
		left: 0;
		width: 100%;
		height: 100%;
		background-color: rgb(97, 148, 111);
		position: absolute;
		z-index: -1;
	}

}
.title{
	color: rgb(27, 75, 45);
	font-weight: 600;
	font-size: 30px;
	letter-spacing: 1.4px;
	line-height: 1.4;
}
//==================

@keyframes scale {
	from {
	  transform: scale(0);
	}
  
	to {
	  transform: scale(1);
	}
  }
  @keyframes scaleDown {
	from {
	  transform: scale(1);
	}
  
	to {
	  transform: scale(0);
	}
  }
  @keyframes hideTop {
  from{
	top: 0;
  }
	to {
	top: -100%;
	}
  }

//==================
@import 'banner';

.game{
	z-index: 1000;
	animation: scale 0.3s ease forwards;
	width: 100%;
	padding: 10px 0;
}

.game__content {
	display: flex;
	@include adaptiveValue("gap", 20, 15);
	justify-content: center;
	align-items: center;
	text-align: center;
	padding: 0 15px;
	max-width: 700px;
	margin: 0 auto;
	font-family: 'Times New Roman', Times, serif;
	@media (max-width:$mobileSmall){
		 flex-direction: column;
	}
}
.game__title {
	margin-bottom: 40px;
	text-decoration: underline;
	text-align: center;
	font-weight: 700;
	font-family: fantasy;
}
.game__body {
	text-align: center;
	width: 200px;
	margin: 0 auto;
	background-color: rgba(235, 226, 226, 0.593);
	border: 3px dotted rgb(17, 43, 28);
	padding: 5px;
	display: flex;
	justify-content: center;
	align-items: center;
	border-radius: 3px;
	height: 72px;
	position: relative;
	transition: all 0.3s ease;
	overflow: hidden;
	font-size: 35px;
	&:after{
		content: 'Число сховане тут Спробуй відкрити його';
		padding: 5px;
		line-height: 1.2;
		position: absolute;
		top: 0;
		left: 0;
		width: 100%;
		font-size: 17px;
		height: 100%;
		background-color: rgb(110, 142, 110);
	}
	&.active{
		&:after{
			left: 100%;
		}
	}
}
.game__moves{
	display: flex;
	flex-direction: column;
	align-items: center;
	gap: 17px;
	
	margin: 10px auto 15px auto;
}
.game__end, .game__again {
	background-color: white;
	&:hover{
		background-color: rgb(50, 79, 50);
	}
}

.game__btns{
	flex-wrap: wrap;
	margin: 22px 0 10px 0;
	display: flex;
	gap: 7px;
	align-items: center;
	justify-content: center;
	button{
		max-height: 60px;
	}
}

.move__form {
	background-color: rgb(70, 103, 96);
	padding: 10px 7px;
	border: 2px solid black;
	border-radius: 10px;
	margin-top: 15px;
	justify-content: center;
	align-items: center;
	display: flex;
	@include adaptiveValue("gap", 15, 6);
	@media (max-width:$mobileSmall){
		flex-wrap: wrap;
	}
	transform: scale(0);
	animation: scale 0.4s ease forwards;
}
.move__input {
	height: 50px;
	@include adaptiveValue("font-size", 25, 20);
	letter-spacing: 10px;
	padding: 5px 20px;
	background-color: rgb(34, 90, 48);
	border: 2px solid black;
	opacity: 0.9;
	width: 140px;
	border-radius: 18px;
}
.game__continue{
	opacity: 0.9;
	height: 50px;
	background-color: rgb(30, 82, 38);
	color: rgb(0, 0, 0);
	cursor: auto;
	padding: 7px 10px;
	border: 2px solid black;
	font-size: 18px;
	&.active{
		border-color: white;
		color: rgb(255, 255, 255);
		cursor: pointer;
	}
}
.move__info{
	border: 1px solid black;
	height: 75px;
	display: flex;
	flex-direction: column;
	justify-content: center;
	gap: 4px;
	background-color: rgb(62, 106, 58);
	border-radius: 5px;
	padding: 10px;
	align-items: flex-start;
	width: 210px;
	color: white;
	p{
		display: flex;
		align-items: center;
		gap: 2px;
	}
}
.move__icon{
	object-fit: cover;
	width: 30px;
	height: 30px;
}
.move__win{
	background-color: rgb(62, 106, 58);
	border-radius: 5px;
	color: white;
	padding: 15px 10px;
	font-size: 20px;
}
.move__over{
	margin-top: 10px;
	color: rgb(0, 0, 0);
	font-size: 28px;
	font-weight: 600;
	letter-spacing: 1.4px;
	line-height: 1.3;
	text-align: center;
	p{
		font-size: 20px;
	}
}

.game__digits{
	display: grid;
	grid-template-columns: repeat(5, 1fr);
	gap: 3px;
	background-color: rgb(15, 14, 14);
	padding: 4px;
	@media (min-width:$mobileSmall){
		grid-template-columns: repeat(3, 1fr);
	}
	@media (min-width:600px){
		grid-template-columns: repeat(5, 1fr);
	}
	

	
}
.game__digit, .game__digit-active{
	font-size: 35px;
	height: 50px;
	border: 2px solid rgb(110, 175, 108);
	background-color: rgb(45, 87, 45);
	padding: 2px;
	&.active{
		color: white;
		background-color: black;
	}
}
.game__digit-active{
	background-color: rgb(144, 80, 80);
	
}